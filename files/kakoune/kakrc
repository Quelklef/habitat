# Set colors
colorscheme tomorrow-night
set-face global Default rgb:c5c8c6,default,default  # inherit transparent background

# Use a cat instead of clippy
set global ui_options ncurses_assistant=cat

# Set indentation to 2 spaces
set global indentwidth 2
set global tabstop 2
# Use spaces, not tabs
hook global InsertChar \t %{ exec -draft h@ }
hook global InsertDelete ' ' %{ try %{
  execute-keys -draft 'h<a-h><a-k>\A\h+\z<ret>i<space><esc><lt>'
}}

# For python, set indentation to 4 spaces
hook global WinSetOption filetype=python %{
  set buffer indentwidth 4
  set buffer tabstop 4
}

# On space, deselect all but the last character of the current selection
map global normal <space> ,

# Use <a-y> and <a-Y> to yank to system clipboard
map global normal <a-y> 'y:nop %sh{ printf %s "$kak_main_reg_dquote" | xsel --input --clipboard }<ret>:echo "Yanked to system clipboard"<ret>'
map global normal <a-Y> 'Y:nop %sh{ printf %s "$kak_main_reg_dquote" | xsel --input --clipboard }<ret>:echo "Yanked to system clipboard"<ret>'

# Paste from system clipboard
map global normal <a-p> ':reg x %sh{ xsel --output --clipboard }<ret>"xp:echo "Pasted from system clipboard"<ret>'
map global normal <a-P> ':reg x %sh{ xsel --output --clipboard }<ret>"xP:echo "Pasted from system clipboard"<ret>'

# On non-system paste, do not select pasted content
map global normal p \"pZp\"pz
map global normal P \"pZP\"pz

# Center screen after z, n, <a-n>, N, <a-N>
map global normal z zvc
map global normal n nvc
map global normal <a-n> <a-n>vc
map global normal N Nvc
map global normal <a-N> <a-N>vc

# Remap object-selection to the more convenient w and W
map global normal w <a-i>
map global normal W <a-a>

# Have 'r' be 'reverse' and ',' be 'replace'
map global normal r <semicolon>
map global normal , r

# use <a-s> to split on newline then drop blank lines
map global normal <a-s> s\n<ret>hs[^\n]<ret>l

# extend selection with X
map global normal X Jx

# <a-l> to rewrite current line
# <a-L> to rewrite line from cursor
map global normal <a-l> <semicolon>giGlc
map global normal <a-L> <semicolon>Glc

# Wrap lines
addhl global/ wrap

# Detect .envrc and bashrc as bash
hook global BufCreate .*\.envrc %{ set buffer filetype sh }
hook global BufCreate .*bashrc %{ set buffer filetype sh }

# Detect .purs (Purescript) as haskell
hook global BufCreate .*\.purs %{ set buffer filetype haskell }

# Detect .ejs (Embedded Javascript) as HTML
hook global BufCreate .*\.ejs %{ set buffer filetype html }

add-highlighter global/ number-lines

